{"version":3,"sources":["images/fireLogo.png","utilities/theme.js","components/rightnav.js","components/burger.js","components/navigation.js","utilities/firestore.js","contexts/notecontext.js","contexts/username_context.js","components/notesForm.js","contexts/active_notecontext.js","components/note.js","components/notes_list.js","components/edit_notes_form.js","components/login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","colors","secondaryDark","favoriteRed","NavLinkStyled","styled","Link","UlStyled","ul","open","Rightnav","props","setOpen","id","to","onClick","StyledBurger","div","Burger","useState","NavbarStyled","Navbar","Navigation","fixed","expand","Brand","src","logo","alt","height","width","firebaseConfig","apiKey","process","authDomain","projectId","firebase","console","log","NoteContext","createContext","NoteContextProvider","notes","setNotes","deleteNote","useCallback","collection","doc","delete","addNote","note","set","title","text","status","category","user","useEffect","a","onSnapshot","querySnapshot","newNotes","forEach","push","data","fetchData","api","useMemo","Provider","value","children","useNoteContext","useContext","UserNameContext","UserNameContextProvider","localStorage","getItem","userName","setUserName","useUserNameContext","StyledH1","h1","NotesFormTitle","setNote","Form","Group","Label","Control","type","placeholder","name","onChange","e","target","NotesFormText","as","rows","NotesFormCategories","NotesFormStatus","Error","p","ErrorSpan","span","NotesForm","history","useHistory","errors","setErrors","onSubmit","preventDefault","error","length","validate","uuid","map","key","Button","variant","ActiveNoteContext","ActiveNoteContextProvider","activeNote","setActiveNote","useActiveNoteContext","SpanLeft","SpanRight","Styledp","StyledCard","Card","StyledCardHeader","Header","StyledUser","NoteI","showDelete","setShowDelete","showEdit","setShowEdit","Body","Title","Text","Footer","ConfirmationMessageDelete","show","handleClose","ConfirmationMessageEdit","Modal","onHide","closeButton","H1Notes","CreatorLink","BigIconNew","BsFileEarmarkPlus","NotesDisplay","NotesCards","CardDeck","n","EditForm","Login","setItem","UserNameForm","setUser","ProvidedApp","basename","Container","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a6fc7bec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fireLogo.3a51098a.png\";","const colors = {\n    secondaryDark: '#302227',\n    favoriteRed: '#d01616'\n};\nexport const theme = {\n    colors\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\"\nconst NavLinkStyled= styled(Link)`\n   margin-right: 1em;\n   color: white;\n   &:hover{\n    color:white;\n    text-decoration: none;\n    }\n`;\nconst UlStyled = styled.ul`\n   list-style: none;\n   display: flex;\n   flex-flow: column nowrap;\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   position: fixed;\n   transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n   top: 0;\n   right: 0;\n   height: 100vh;\n   width: 300px;\n   padding-top: 3.5rem;\n   transition: transform 0.3s ease-in-out;\n   li{\n   padding:18px 10px\n   }\n`;\nexport function Rightnav(props){\n    const {open, setOpen} = props;\n    return <>\n        <UlStyled open ={open}>\n            <li>\n                <NavLinkStyled id=\"creator\"  to=\"/creator\" onClick={()=>setOpen(false)}>\n                    NOTE CREATOR\n                </NavLinkStyled>\n            </li>\n            <li>\n                <NavLinkStyled id=\"login\"  to=\"/login\" onClick={()=>setOpen(false)}>\n                    LOGIN\n                </NavLinkStyled>\n            </li>\n        </UlStyled>\n\n\n    </>\n}","import React, { useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport {Rightnav} from \"./rightnav\";\n\nconst StyledBurger = styled.div`\n  width: 2rem;\n  height: 2rem;\n  position: fixed;\n  top: 15px;\n  right: 20px;\n  z-index: 20;\n  display: none;\n  display: flex;\n  justify-content: space-around;\n  flex-flow: column nowrap;\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background-color: ${({ open }) => open ? '#ccc' : '#333'};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.3s linear;\n    &:nth-child(1) {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\n      opacity: ${({ open }) => open ? 0 : 1};\n    }\n    &:nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n\nexport const Burger = () => {\n    const [open, setOpen] = useState(false)\n\n    return (\n        <>\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\n                <div />\n                <div />\n                <div />\n            </StyledBurger>\n            <Rightnav open={open} setOpen={setOpen}/>\n        </>\n    )\n}","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"../images/fireLogo.png\";\nimport {Burger} from \"./burger\";\n\n\nconst NavbarStyled = styled(Navbar)`\n  background-color: ${({theme}) =>theme.colors.favoriteRed};\n  padding: 1em;\n`;\n\nconst NavLinkStyled= styled(Link)`\n   margin-right: 1em;\n   color: white;\n   &:hover{\n    color:white;\n    text-decoration: none;\n`;\n\nexport function Navigation(){\n    return <>\n        <NavbarStyled  fixed=\"top\" expand=\"lg\">\n            <Navbar.Brand>\n                <NavLinkStyled id=\"home_link\"  to=\"/\">\n                    <img src={logo} alt=\"\" height=\"75\"width=\"150\" />\n                </NavLinkStyled>\n            </Navbar.Brand>\n            <Burger/>\n        </NavbarStyled>\n        </>\n}","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = (firebaseConfig.projectId ? firebase.firestore() : null);\nif (db)\n    console.log(`connection to database is ok`);\nelse\n    console.log(`ERROR: no connection to database`);\n\n\nexport const STATUS_NEW= \"new\";\n\nexport function firestoreCheck(){\n    console.log('firestore works');\n}\n","import React, {createContext, useCallback, useContext, useEffect, useMemo, useState} from \"react\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport * as FirestoreService from \"../utilities/firestore\";\n\n\n//Deze context dient voor het aanmaken, deleten en updaten van notes.\nFirestoreService.firestoreCheck();\nconst NoteContext = createContext();\n\nexport function NoteContextProvider(props){\n    const[notes, setNotes] = useState([]);\n    const deleteNote = useCallback((id)=>{\n        const db = firebase.firestore();\n        db.collection('notes').doc(id).delete();\n    },[]);\n    const addNote = useCallback((note) =>{\n        const db = firebase.firestore();\n        db.collection('notes').doc(note.id).set({id: note.id, title: note.title, text : note.text, status:note.status, category :note.category, user: note.user});\n\n\n\n    }, []);\n    \n    useEffect(()=>{\n        const fetchData = async () =>{\n            const db = firebase.firestore().collection('notes');\n            db.onSnapshot((querySnapshot)=>{\n                const newNotes = [];\n                querySnapshot.forEach((doc)=>{\n                    newNotes.push(doc.data());\n                })\n                setNotes(newNotes);\n            })\n\n        }\n        fetchData();\n    }, [setNotes]);\n    const api = useMemo(()=>({notes, addNote, deleteNote}), [notes,addNote, deleteNote]);\n    return  <NoteContext.Provider value={api}>\n        {props.children}\n    </NoteContext.Provider>\n}\nexport const useNoteContext=()=>useContext(NoteContext);\n\n","import React, {createContext, useContext, useMemo, useState} from \"react\";\n\n//Deze context wordt gebruikt om een username te geven aan site visitors\nconst UserNameContext = createContext();\nexport function UserNameContextProvider(props){\n    const [userName, setUserName] = useState(localStorage.getItem(\"user\"));\n    const api = useMemo(()=> ({userName, setUserName}), [userName, setUserName]);\n    return <UserNameContext.Provider value={api}>\n        {props.children}\n    </UserNameContext.Provider>\n\n}\nexport const useUserNameContext = ()=>useContext(UserNameContext);","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport uuid from \"react-uuid\";\nimport \"firebase/firestore\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from \"react-router-dom\";\nimport {useNoteContext} from \"../contexts/notecontext\";\nimport {useUserNameContext} from \"../contexts/username_context\";\n\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n`;\n\nexport function NotesFormTitle(props){\n    const {setNote, note} = props;\n    function handleTitleChange(e){\n        setNote({...note, title:e.target.value});\n\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Title\" id=\"notesform_title\" name=\"notesform_title\" onChange={handleTitleChange} value={note.title} />\n        </Form.Group>\n    </>\n}\n\nexport function NotesFormText(props){\n    const{setNote, note} = props;\n    function handleTextChange(e){\n        setNote({...note, text: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Text:</Form.Label>\n            <Form.Control as=\"textarea\" placeholder=\"Text\" rows={3} id=\"notesform_note\" name=\"notesform_note\" onChange={handleTextChange} value={note.text}/>\n        </Form.Group>\n    </>\n}\nexport function NotesFormCategories(props){\n    const{setNote, note} = props;\n    function handleCategoryChange(e){\n        setNote({...note,category: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Category:</Form.Label>\n            <Form.Control as=\"select\" id=\"notesform_category\" name=\"notesform_category\" onChange={handleCategoryChange} value={note.category}>\n                <option>Work</option>\n                <option>Groceries</option>\n                <option>Home</option>\n                <option>Family</option>\n                <option>Random</option>\n            </Form.Control>\n        </Form.Group>\n    </>\n}\nexport function NotesFormStatus(props){\n    const {setNote, note} = props;\n    function handleStatusChange(e){\n        setNote({...note,status: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Status:</Form.Label>\n            <Form.Control as=\"select\" id=\"notesform_status\" name=\"notesform_status\" onChange={handleStatusChange} value={note.status}>\n                <option>To do</option>\n                <option>In progress</option>\n                <option>On hold</option>\n                <option>Done</option>\n                <option>NA</option>\n            </Form.Control>\n        </Form.Group>\n        </>\n\n}\nfunction validate(note){\n    const errors = [];\n    if(note.title.length === 0){\n        errors.push(\"Title can't be empty!\");\n    }\n    if(note.text.length === 0){\n        errors.push(\"Text can't be empty!\");\n    }\n    if(note.status.length === 0){\n        errors.push(\"Status can't be empty!\");\n    }\n    if(note.category.length === 0){\n        errors.push(\"Category can't be empty!\");\n    }\n    return errors;\n}\nconst Error = styled.p`\n\n`;\nconst ErrorSpan = styled.span`\n font-size: 1.5em;\n color:${({theme}) =>theme.colors.favoriteRed};\n \n`;\nexport function NotesForm(){\n    let history = useHistory();\n    const{addNote}=useNoteContext();\n    const[note, setNote]= useState({\n        id: \"\",\n        title: \"\",\n        text: \"\",\n        category: \"Work\",\n        status: \"To do\",\n        user: \"\"\n    });\n    const {userName} = useUserNameContext();\n    const [errors, setErrors] = useState([]);\n\n\n    function handleSubmit(e){\n        e.preventDefault();\n        const error = validate(note);\n        if(error.length> 0){\n            setErrors(error);\n            return;\n        }\n        addNote({...note, id: uuid(), user:userName});\n        console.log(note.title);\n        setNote({...note, title:\"\", text: \"\" });\n        history.push(\"/\");\n\n    }\n    return <>\n        <StyledH1>NOTE CREATOR</StyledH1>\n        <Form onSubmit={handleSubmit}>\n            {errors.map(error =>(\n                <Error key={error}><ErrorSpan>Error</ErrorSpan>: {error}</Error>\n            ))}\n           <NotesFormTitle setNote={setNote} note={note}/>\n           <NotesFormText setNote={setNote} note={note}/>\n           <NotesFormCategories setNote={setNote} note={note}/>\n           <NotesFormStatus setNote={setNote} note={note}/>\n           <Button id=\"submit\" variant=\"primary\" type=\"submit\">\n                Submit\n           </Button>\n        </Form>\n    </>\n}","import React, {createContext, useContext, useMemo, useState} from \"react\";\n//Deze context wordt gebruikt om een note als active te beschouwen\nconst ActiveNoteContext= createContext();\nexport function ActiveNoteContextProvider(props){\n    const[activeNote, setActiveNote] = useState(null);\n    const api = useMemo(()=>({\n            activeNote, setActiveNote\n        }), [activeNote, setActiveNote]\n    );\n    return  <ActiveNoteContext.Provider value={api}>\n        {props.children}\n    </ActiveNoteContext.Provider>\n};\nexport const useActiveNoteContext = () =>useContext(ActiveNoteContext);","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport {MdDelete} from \"react-icons/md\";\nimport {MdEdit} from \"react-icons/md\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {Link} from \"react-router-dom\";\nimport {useActiveNoteContext} from \"../contexts/active_notecontext\";\nimport {useNoteContext} from \"../contexts/notecontext\"\n\nconst SpanLeft = styled.span`\n  float: left;\n`;\nconst SpanRight = styled.span`\n float: right;\n`;\nconst Styledp = styled.p`\nwidth: 100%;\n`;\nconst StyledCard = styled(Card)`\n   margin-top: 3em;\n    @media (min-width: 1000px) {\n   min-width: 45%;\n  }\n  @media (max-width: 999px) {\n    min-width: 95%;\n  }\n`;\n\nconst StyledCardHeader = styled(Card.Header)`\n  background-color: ${(props) => props.status === 'NA' ? 'white' :\n                        props.status === 'To do' ? '#ff4019' : \n                            props.status === 'In progress' ? '#1899f5' : \n                                props.status === 'On hold' ? '#f5d018' : '#1ed47c'};\n`;\nconst StyledUser = styled.p`\n  text-align: center;\n`;\nexport function NoteI(props){\n    const{note}= props;\n    const[showDelete, setShowDelete] = useState(false);\n    const handleCloseDelete = () => setShowDelete(false);\n    const handleShowDelete = () => setShowDelete(true);\n    const [showEdit, setShowEdit] = useState(false);\n    const handleCloseEdit = () => setShowEdit(false);\n    const {setActiveNote} = useActiveNoteContext();\n    return <>\n        <StyledCard id={note.title}>\n            <StyledCardHeader status={note.status}>\n                <SpanLeft>{note.category}</SpanLeft>\n                <SpanRight>{note.status}</SpanRight>\n            </StyledCardHeader>\n            <Card.Body id=\"body\">\n                <Card.Title id=\"title\">\n                    {note.title}\n                </Card.Title>\n                <Card.Text>\n                    {note.text}\n                </Card.Text>\n            </Card.Body>\n            <Card.Footer id=\"footer\">\n                <Styledp>\n                    <StyledUser>Made by {note.user}</StyledUser>\n                    <SpanLeft><Button onClick={()=>{\n                        setActiveNote(note);\n                        setShowEdit(true);\n                    }}><MdEdit/></Button></SpanLeft>\n                    <SpanRight><Button onClick={handleShowDelete}><MdDelete/></Button></SpanRight>\n                </Styledp>\n            </Card.Footer>\n        </StyledCard>\n        <ConfirmationMessageDelete show={showDelete} handleClose={handleCloseDelete} note={note}/>\n        <ConfirmationMessageEdit show={showEdit} handleClose={handleCloseEdit} note={note}/>\n    </>\n}\n\nfunction ConfirmationMessageDelete(props){\n    const{show,handleClose, note} = props;\n    const{deleteNote} = useNoteContext();\n    return <>\n        <Modal show={show} onHide={handleClose} id=\"delete\">\n            <Modal.Header closeButton>\n                <Modal.Title>Delete confirmation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                You are about to delete the note {note.title}\n            </Modal.Body>\n            <Modal.Footer>\n                <Styledp>\n                    <SpanLeft><Button onClick={handleClose}>Close</Button></SpanLeft>\n                    <SpanRight><Button onClick={()=>deleteNote(note.id)}>Yes, I am sure!</Button></SpanRight>\n                </Styledp>\n            </Modal.Footer>\n        </Modal>\n        </>\n}\nfunction ConfirmationMessageEdit(props){\n    const{show, handleClose, note} = props;\n    return <>\n        <Modal show={show} onHide={handleClose} id=\"edit\">\n            <Modal.Header closeButton>\n                <Modal.Title>Edit confirmation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                You are about to edit the note {note.title}.\n            </Modal.Body>\n            <Modal.Footer id=\"footerModal\">\n                <Styledp>\n                    <SpanLeft><Button onClick={handleClose}>Close</Button></SpanLeft>\n                    <SpanRight id=\"spanRight\" ><Link to=\"/editor\">Yes, I am sure!</Link></SpanRight>\n                </Styledp>\n            </Modal.Footer>\n        </Modal>\n    </>\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\"\nimport {NoteI} from \"./note\";\nimport {useNoteContext} from \"../contexts/notecontext\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport {useUserNameContext} from \"../contexts/username_context\";\nimport {BsFileEarmarkPlus} from \"react-icons/bs\";\n\n\nconst H1Notes = styled.h1`\n    display: block;\n    margin-top: 5em;\n`;\n\nconst CreatorLink = styled(Link)`\n    &:hover{\n    color:white;\n    text-decoration: none;\n    }\n`;\nconst BigIconNew = styled(BsFileEarmarkPlus)`\n  font-size: 3em;\n  color: ${({theme}) => theme.colors.secondaryDark};\n`;\n\nexport function NotesDisplay() {\n    const {notes} = useNoteContext();\n    const {userName} = useUserNameContext();\n    console.log(notes);\n    return <>\n        <H1Notes>NOTES: </H1Notes>\n        <p id=\"login_message_succes\"> {userName !== null ? `You are now logged in as ${userName}!` :\n            \"Log in to use the application!\"} </p>\n        <p>{!notes.length ? \"No notes to display. Why don't you make a note?\" : null}<CreatorLink to=\"/creator\">\n            <BigIconNew/></CreatorLink></p>\n\n\n        <NotesCards/>\n    </>\n}\n\nfunction NotesCards() {\n    const {notes} = useNoteContext();\n    return <>\n        <CardDeck>\n            {notes.map((n) => (<NoteI key={n.id} note={n}/>))}\n        </CardDeck>\n    </>\n}\n\n","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from \"react-router-dom\";\nimport {useActiveNoteContext} from \"../contexts/active_notecontext\";\nimport {useNoteContext} from \"../contexts/notecontext\";\nimport {NotesFormCategories, NotesFormStatus, NotesFormText, NotesFormTitle} from \"./notesForm\";\nimport {useUserNameContext} from \"../contexts/username_context\";\n\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n`;\n\nexport function EditForm(){\n    const{activeNote}=useActiveNoteContext();\n    const {addNote} = useNoteContext();\n    const[note, setNote]= useState(activeNote);\n    const {userName} = useUserNameContext();\n    let history = useHistory();\n    function handleSubmit(e){\n        e.preventDefault();\n        addNote({...note, user: userName});\n        history.push(\"/\");\n    }\nreturn <>\n    <StyledH1>NOTE EDITOR</StyledH1>\n    <Form onSubmit={handleSubmit}>\n        <NotesFormTitle setNote={setNote} note={note}/>\n        <NotesFormText setNote={setNote} note={note}/>\n        <NotesFormCategories setNote={setNote} note={note}/>\n        <NotesFormStatus setNote={setNote} note={note}/>\n        <Button id=\"submit\" variant=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n    </Form>\n\n</>\n}","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport {useUserNameContext} from \"../contexts/username_context\";\nimport {useHistory} from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n\n`;\nexport function Login() {\n    let history = useHistory();\n    const {userName, setUserName} = useUserNameContext();\n    console.log(userName + \" :username\")\n\n    function handleSubmit(e) {\n        localStorage.setItem(\"user\", userName);\n        history.push(\"/\");\n    }\n\n    return <>\n        <StyledH1>LOGIN: </StyledH1>\n        <p id=\"login_message\"> {userName !== null ? `You are now logged in as ${userName} !` :\n            \"Log in to use the application!\"} </p>\n        <p>You can always change your display name here.</p>\n        <Form onSubmit={handleSubmit}>\n            <UserNameForm setUser={setUserName}/>\n            <Button id=\"submit_name\" variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n        </Form>\n\n    </>\n}\n\nfunction UserNameForm(props){\n    const {setUser} = props;\n    function handleNameChance(e){\n        setUser(e.target.value);\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>\n                Name:\n            </Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Title\" id=\"userform_name\" name=\"userform_name\" onChange={handleNameChance}>\n            </Form.Control>\n        </Form.Group>\n        </>\n}","import React from 'react';\nimport \"firebase/firestore\";\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\"\nimport Container from \"react-bootstrap/Container\";\nimport {ThemeProvider} from \"emotion-theming\";\nimport {theme} from \"./utilities/theme\";\nimport './App.css';\nimport {Navigation} from \"./components/navigation\";\nimport {NotesForm} from \"./components/notesForm\";\nimport {NotesDisplay} from \"./components/notes_list\";\nimport {ActiveNoteContextProvider} from \"./contexts/active_notecontext\";\nimport {NoteContextProvider} from \"./contexts/notecontext\";\nimport {UserNameContextProvider, useUserNameContext} from \"./contexts/username_context\";\nimport {EditForm} from \"./components/edit_notes_form\";\nimport {Login} from \"./components/login\";\n\n\nfunction App() {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <UserNameContextProvider>\n                    <ActiveNoteContextProvider>\n                        <NoteContextProvider>\n                            <ProvidedApp/>\n                        </NoteContextProvider>\n                    </ActiveNoteContextProvider>\n                </UserNameContextProvider>\n            </ThemeProvider>\n        </>\n    );\n}\n\nfunction ProvidedApp() {\n    const {userName} = useUserNameContext();\n    return (<>\n            <HashRouter basename={\"/\"}>\n                <Container>\n                    <Navigation/>\n                    <Switch>\n                        <Route exact path={\"/\"}>\n                            {userName !== null ?\n                                <NotesDisplay/> : <Redirect to={\"/login\"}/>\n                            }\n                        </Route>\n                        <Route exact path={\"/creator\"}>\n                            {userName !== null ?\n                                <NotesForm/> : <Redirect to={\"/login\"}/>}\n                        </Route>\n\n                        <Route exact path={\"/editor\"}>\n                            {userName !== null ?\n                                <EditForm/> : <Redirect to={\"/login\"}/>}\n                        </Route>\n                        <Route exact path={\"/login\"}>\n                            <Login/>\n                        </Route>\n                    </Switch>\n                </Container>\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}