{"version":3,"sources":["utilities/theme.js","utilities/firestore.js","contexts/user_context.js","components/logout.js","components/rightnav.js","components/burger.js","components/navigation.js","contexts/notecontext.js","components/notesForm.js","contexts/active_notecontext.js","components/note.js","components/notes_list.js","components/edit_notes_form.js","components/user_login.js","components/user_registration.js","App.js","serviceWorker.js","index.js","images/fireLogo.png"],"names":["theme","colors","secondaryDark","favoriteRed","firebaseConfig","apiKey","process","authDomain","projectId","firebase","console","log","auth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","signup","useCallback","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","useEffect","onAuthStateChanged","user","value","useMemo","Provider","useAuth","useContext","NavLinkStyled","styled","Button","Logout","props","setOpen","error","setError","history","useHistory","a","push","onClick","Link","UlStyled","ul","open","UserGreeting","p","Rightnav","id","to","StyledBurger","div","Burger","NavbarStyled","Navbar","Navigation","fixed","expand","Brand","src","logo","alt","height","width","NoteContext","NoteContextProvider","notes","setNotes","deleteNote","collection","doc","delete","addNote","note","set","title","text","status","category","date","where","onSnapshot","querySnapshot","newNotes","forEach","data","fetchData","api","useNoteContext","StyledH1","h1","ButtonStyled","NotesFormTitle","setNote","Form","Group","Label","Control","type","placeholder","name","onChange","e","target","NotesFormText","as","rows","NotesFormCategories","NotesFormStatus","NotesFormDate","Error","ErrorSpan","span","NotesForm","errors","setErrors","onSubmit","preventDefault","length","validate","uuid","map","key","variant","ActiveNoteContext","ActiveNoteContextProvider","activeNote","setActiveNote","useActiveNoteContext","SpanLeft","SpanRight","Styledp","StyledLink","StyledCard","Card","StyledCardHeader","Header","StyledUser","NoteI","showDelete","setShowDelete","showEdit","setShowEdit","Body","Title","Text","Footer","ConfirmationMessageDelete","show","handleClose","ConfirmationMessageEdit","Modal","onHide","closeButton","H1Notes","CreatorLink","BigIconNew","BsFileEarmarkPlus","NotesDisplay","NotesCards","CardDeck","n","EditForm","StyledButton","UserLogin","emailRef","useRef","passwordRef","current","className","Alert","ref","required","disabled","Registration","passwordConfirmRef","ProvidedApp","basename","Container","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.a87c02dd.chunk.js","sourcesContent":["const colors = {\n    secondaryDark: '#302227',\n    favoriteRed: '#d01616'\n};\nexport const theme = {\n    colors\n};\n","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\"\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = (firebaseConfig.projectId ? firebase.firestore() : null);\nif (db)\n    console.log(`connection to database is ok`);\nelse\n    console.log(`ERROR: no connection to database`);\n\n\nexport const STATUS_NEW= \"new\";\n\nexport const auth = firebase.auth()\nexport function firestoreCheck(){\n    console.log('firestore works');\n}\n","import React, {useContext, useState, useEffect, useMemo, useCallback} from \"react\"\nimport {auth} from \"../utilities/firestore\"\n\nconst AuthContext = React.createContext();\nexport function AuthProvider({ children }) {\n    const [currentUser, setCurrentUser] = useState()\n    const [loading, setLoading] = useState(true)\n\n    const signup= useCallback((email, password)=>{\n        return auth.createUserWithEmailAndPassword(email, password);\n    }, []);\n\n    const login = useCallback((email, password)=>{\n        return auth.signInWithEmailAndPassword(email, password);\n    }, []);\n\n    const logout= useCallback(()=>{\n        return auth.signOut()\n    }, []);\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setLoading(false)\n        })\n\n        return unsubscribe\n    }, [])\n\n    const value = useMemo(()=> ({currentUser, login, signup, logout}), [currentUser, login, signup, logout]);\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\nexport const useAuth =()=> useContext(AuthContext);","import React, { useState } from \"react\"\nimport { Button} from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/user_context\"\nimport { useHistory} from \"react-router-dom\"\nimport styled from \"@emotion/styled\";\n\nconst NavLinkStyled= styled(Button)`\n   margin-right: 1em;\n   color: ${({theme}) =>theme.colors.favoriteRed};\n   background-color: white;\n   &:hover{\n    color:${({theme}) =>theme.colors.secondaryDark};\n    text-decoration: none;\n    background-color: white;\n    }\n`;\nexport function Logout(props) {\n    const{setOpen} = props;\n    const [error, setError] = useState(\"\")\n    const { logout } = useAuth()\n    const history = useHistory()\n\n    async function handleLogout() {\n\n        setError(\"\")\n        try {\n            await logout()\n            history.push(\"/login\")\n        } catch {\n            setError(\"Failed to log out\")\n        }\n        setOpen(false);\n    }\n\n    return (\n        <>\n                <NavLinkStyled onClick={handleLogout}>\n                    LOG OUT\n                </NavLinkStyled>\n               {error}\n        </>\n    )\n}","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\"\nimport {Logout} from \"./logout\";\nimport {useAuth} from \"../contexts/user_context\";\n\nconst NavLinkStyled= styled(Link)`\n   margin-right: 1em;\n   color: white;\n   &:hover{\n    color:white;\n    text-decoration: none;\n    }\n`;\nconst UlStyled = styled.ul`\n   list-style: none;\n   display: flex;\n   flex-flow: column nowrap;\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   position: fixed;\n   transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n   top: 0;\n   right: 0;\n   height: 100vh;\n   width: 300px;\n   padding-top: 3.5rem;\n   transition: transform 0.3s ease-in-out;\n   li{\n   padding:18px 10px\n   }\n`;\nconst UserGreeting = styled.p`\n  margin-right: 1em;\n  color: white;\n`;\nexport function Rightnav(props){\n    const {open, setOpen} = props;\n    const { currentUser } = useAuth()\n    return <>\n        <UlStyled open ={open}>\n            <li>\n                <UserGreeting>Hi, {currentUser.email}</UserGreeting>\n            </li>\n            <li>\n                <NavLinkStyled id=\"creator\"  to=\"/creator\" onClick={()=>setOpen(false)}>\n                    NOTE CREATOR\n                </NavLinkStyled>\n            </li>\n            <li>\n                <Logout open={open} setOpen={setOpen}/>\n            </li>\n        </UlStyled>\n\n\n    </>\n}","import React, { useState } from 'react';\nimport styled from \"@emotion/styled\";\nimport {Rightnav} from \"./rightnav\";\n\nconst StyledBurger = styled.div`\n  width: 2rem;\n  height: 2rem;\n  position: fixed;\n  top: 3em;\n  right: 20px;\n  z-index: 20;\n  display: flex;\n  justify-content: space-around;\n  flex-flow: column nowrap;\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background-color: ${({ open }) => open ? '#ccc' : '#333'};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.3s linear;\n    &:nth-child(1) {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\n      opacity: ${({ open }) => open ? 0 : 1};\n    }\n    &:nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n\nexport const Burger = () => {\n    const [open, setOpen] = useState(false)\n\n    return (\n        <>\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\n                <div />\n                <div />\n                <div />\n            </StyledBurger>\n            <Rightnav open={open} setOpen={setOpen}/>\n        </>\n    )\n}","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\"\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"../images/fireLogo.png\";\nimport {Burger} from \"./burger\";\n\n\nconst NavbarStyled = styled(Navbar)`\n  background-color: ${({theme}) =>theme.colors.favoriteRed};\n  padding: 1em;\n`;\n\nconst NavLinkStyled= styled(Link)`\n   margin-right: 1em;\n   color: white;\n   &:hover{\n    color:white;\n    text-decoration: none;\n`;\n\nexport function Navigation(){\n    return <>\n        <NavbarStyled  fixed=\"top\" expand=\"lg\">\n            <Navbar.Brand>\n                <NavLinkStyled id=\"home_link\"  to=\"/\">\n                    <img src={logo} alt=\"\" height=\"75\"width=\"150\" />\n                </NavLinkStyled>\n            </Navbar.Brand>\n            <Burger/>\n        </NavbarStyled>\n        </>\n}","import React, {createContext, useCallback, useContext, useEffect, useMemo, useState} from \"react\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport * as FirestoreService from \"../utilities/firestore\";\nimport {useAuth} from \"./user_context\";\n\n\n//Deze context dient voor het aanmaken, deleten en updaten van notes.\nFirestoreService.firestoreCheck();\nconst NoteContext = createContext();\n\nexport function NoteContextProvider(props){\n    const[notes, setNotes] = useState([]);\n    const { currentUser } = useAuth();\n    const deleteNote = useCallback((id)=>{\n        const db = firebase.firestore();\n        db.collection('notes').doc(id).delete();\n    },[]);\n    const addNote = useCallback((note) =>{\n        const db = firebase.firestore();\n        db.collection('notes').doc(note.id).set({id: note.id, title: note.title, text : note.text, status:note.status, category :note.category, user: note.user, date:note.date});\n\n\n\n    }, []);\n    useEffect(()=>{\n        const fetchData = async () =>{\n            if(currentUser){\n                const db =firebase.firestore().collection('notes').where('user', '==', currentUser.email);\n                db.onSnapshot((querySnapshot)=>{\n                    const newNotes = [];\n                    querySnapshot.forEach((doc)=>{\n                        newNotes.push(doc.data());\n                    })\n                    setNotes(newNotes);\n                })\n            }\n        }\n        fetchData();\n    }, [setNotes, currentUser]);\n    const api = useMemo(()=>({notes, addNote, deleteNote}), [notes,addNote, deleteNote]);\n    return  <NoteContext.Provider value={api}>\n        {props.children}\n    </NoteContext.Provider>\n}\nexport const useNoteContext=()=>useContext(NoteContext);\n\n","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport uuid from \"react-uuid\";\nimport \"firebase/firestore\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from \"react-router-dom\";\nimport {useNoteContext} from \"../contexts/notecontext\";\nimport {useAuth} from \"../contexts/user_context\";\n\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n`;\nconst ButtonStyled = styled(Button)`\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   color: white;\n   &:hover{\n    background-color:${({theme}) =>theme.colors.favoriteRed};\n    text-decoration: none;\n    color: white;\n    }\n    &:focus{\n    background-color:${({theme}) =>theme.colors.secondaryDark};\n    text-decoration: none;\n    color: white;\n    }\n`;\n\nexport function NotesFormTitle(props){\n    const {setNote, note} = props;\n    function handleTitleChange(e){\n        setNote({...note, title:e.target.value});\n\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Title:</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Title\" id=\"notesform_title\" name=\"notesform_title\" onChange={handleTitleChange} value={note.title} />\n        </Form.Group>\n    </>\n}\n\nexport function NotesFormText(props){\n    const{setNote, note} = props;\n    function handleTextChange(e){\n        setNote({...note, text: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Text:</Form.Label>\n            <Form.Control as=\"textarea\" placeholder=\"Text\" rows={3} id=\"notesform_note\" name=\"notesform_note\" onChange={handleTextChange} value={note.text}/>\n        </Form.Group>\n    </>\n}\nexport function NotesFormCategories(props){\n    const{setNote, note} = props;\n    function handleCategoryChange(e){\n        setNote({...note,category: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Category:</Form.Label>\n            <Form.Control as=\"select\" id=\"notesform_category\" name=\"notesform_category\" onChange={handleCategoryChange} value={note.category}>\n                <option>Work</option>\n                <option>Groceries</option>\n                <option>Home</option>\n                <option>Family</option>\n                <option>Random</option>\n            </Form.Control>\n        </Form.Group>\n    </>\n}\nexport function NotesFormStatus(props){\n    const {setNote, note} = props;\n    function handleStatusChange(e){\n        setNote({...note,status: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Status:</Form.Label>\n            <Form.Control as=\"select\" id=\"notesform_status\" name=\"notesform_status\" onChange={handleStatusChange} value={note.status}>\n                <option>To do</option>\n                <option>In progress</option>\n                <option>On hold</option>\n                <option>Done</option>\n                <option>NA</option>\n            </Form.Control>\n        </Form.Group>\n        </>\n\n}\nexport function NotesFormDate(props){\n    const{setNote, note} = props;\n    function handleDateChange(e){\n        setNote({...note,date: e.target.value});\n    }\n    return <>\n        <Form.Group>\n            <Form.Label>Date (optional)</Form.Label>\n            <Form.Control type=\"date\" id=\"notesform_date\" name=\"notesform_date\" onChange={handleDateChange} value={note.date}/>\n        </Form.Group>\n    </>\n}\nfunction validate(note){\n    const errors = [];\n    if(note.title.length === 0){\n        errors.push(\"Title can't be empty!\");\n    }\n    if(note.text.length === 0){\n        errors.push(\"Text can't be empty!\");\n    }\n    if(note.status.length === 0){\n        errors.push(\"Status can't be empty!\");\n    }\n    if(note.category.length === 0){\n        errors.push(\"Category can't be empty!\");\n    }\n    return errors;\n}\nconst Error = styled.p`\n\n`;\nconst ErrorSpan = styled.span`\n font-size: 1.5em;\n color:${({theme}) =>theme.colors.favoriteRed};\n \n`;\nexport function NotesForm(){\n    let history = useHistory();\n    const{addNote}=useNoteContext();\n    const[note, setNote]= useState({\n        id: \"\",\n        title: \"\",\n        text: \"\",\n        category: \"Work\",\n        status: \"To do\",\n        user: \"\",\n        date: \"\"\n    });\n    const { currentUser } = useAuth();\n    const [errors, setErrors] = useState([]);\n\n\n    function handleSubmit(e){\n        e.preventDefault();\n        const error = validate(note);\n        if(error.length> 0){\n            setErrors(error);\n            return;\n        }\n        console.log(currentUser.email)\n        addNote({...note, id: uuid(), user:currentUser.email});\n        console.log(note.title);\n        setNote({...note, title:\"\", text: \"\" });\n        history.push(\"/\");\n\n    }\n    return <>\n        <StyledH1>NOTE CREATOR</StyledH1>\n        <Form onSubmit={handleSubmit}>\n            {errors.map(error =>(\n                <Error key={error}><ErrorSpan>Error</ErrorSpan>: {error}</Error>\n            ))}\n           <NotesFormTitle setNote={setNote} note={note}/>\n           <NotesFormText setNote={setNote} note={note}/>\n           <NotesFormCategories setNote={setNote} note={note}/>\n           <NotesFormStatus setNote={setNote} note={note}/>\n           <NotesFormDate setNote={setNote} note={note}/>\n           <ButtonStyled id=\"submit\" variant=\"primary\" type=\"submit\">\n                Submit\n           </ButtonStyled>\n        </Form>\n    </>\n}","import React, {createContext, useContext, useMemo, useState} from \"react\";\n//Deze context wordt gebruikt om een note als active te beschouwen\nconst ActiveNoteContext= createContext();\nexport function ActiveNoteContextProvider(props){\n    const[activeNote, setActiveNote] = useState(null);\n    const api = useMemo(()=>({\n            activeNote, setActiveNote\n        }), [activeNote, setActiveNote]\n    );\n    return  <ActiveNoteContext.Provider value={api}>\n        {props.children}\n    </ActiveNoteContext.Provider>\n};\nexport const useActiveNoteContext = () =>useContext(ActiveNoteContext);","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport {MdDelete} from \"react-icons/md\";\nimport {MdEdit} from \"react-icons/md\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {Link} from \"react-router-dom\";\nimport {useActiveNoteContext} from \"../contexts/active_notecontext\";\nimport {useNoteContext} from \"../contexts/notecontext\"\n\nconst SpanLeft = styled.span`\n  float: left;\n`;\nconst SpanRight = styled.span`\n float: right;\n`;\nconst Styledp = styled.p`\nwidth: 100%;\n`;\n\nconst ButtonStyled = styled(Button)`\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   color: white;\n   &:hover{\n    background-color:${({theme}) =>theme.colors.favoriteRed};\n    text-decoration: none;\n    color: white;\n    }\n    &:focus{\n    background-color:${({theme}) =>theme.colors.secondaryDark};\n    text-decoration: none;\n    color: white;\n    }\n`;\nconst StyledLink = styled(Link)`\n  color: ${({theme}) =>theme.colors.secondaryDark};\n  text-decoration-line: underline;\n  &:hover{\n    color: ${({theme}) =>theme.colors.favoriteRed};\n  }\n`;\nconst StyledCard = styled(Card)`\n   margin-top: 3em;\n    @media (min-width: 1000px) {\n   min-width: 45%;\n  }\n  @media (max-width: 999px) {\n    min-width: 95%;\n  }\n`;\n\nconst StyledCardHeader = styled(Card.Header)`\n  background-color: ${(props) => props.status === 'NA' ? 'white' :\n                        props.status === 'To do' ? '#ff4019' : \n                            props.status === 'In progress' ? '#1899f5' : \n                                props.status === 'On hold' ? '#f5d018' : '#1ed47c'};\n`;\nconst StyledUser = styled.p`\n  text-align: center;\n`;\nexport function NoteI(props){\n    const{note}= props;\n    const[showDelete, setShowDelete] = useState(false);\n    const handleCloseDelete = () => setShowDelete(false);\n    const handleShowDelete = () => setShowDelete(true);\n    const [showEdit, setShowEdit] = useState(false);\n    const handleCloseEdit = () => setShowEdit(false);\n    const {setActiveNote} = useActiveNoteContext();\n    return <>\n        <StyledCard id={note.title}>\n            <StyledCardHeader status={note.status}>\n                <SpanLeft>{note.category}</SpanLeft>\n                <SpanRight>{note.status}</SpanRight>\n            </StyledCardHeader>\n            <Card.Body id=\"body\">\n                <Card.Title id=\"title\">\n                    {note.title}\n                </Card.Title>\n                <Card.Text>\n                    {note.text}\n                </Card.Text>\n            </Card.Body>\n            <Card.Footer id=\"footer\">\n                <Styledp>\n                    <StyledUser>{note.date!== \"\" ? `Due date: ${note.date}` : \"No due date!\" }</StyledUser>\n                    <SpanLeft><ButtonStyled onClick={()=>{\n                        setActiveNote(note);\n                        setShowEdit(true);\n                    }}><MdEdit/></ButtonStyled></SpanLeft>\n                    <SpanRight><ButtonStyled onClick={handleShowDelete}><MdDelete/></ButtonStyled></SpanRight>\n                </Styledp>\n            </Card.Footer>\n        </StyledCard>\n        <ConfirmationMessageDelete show={showDelete} handleClose={handleCloseDelete} note={note}/>\n        <ConfirmationMessageEdit show={showEdit} handleClose={handleCloseEdit} note={note}/>\n    </>\n}\n\nfunction ConfirmationMessageDelete(props){\n    const{show,handleClose, note} = props;\n    const{deleteNote} = useNoteContext();\n    return <>\n        <Modal show={show} onHide={handleClose} id=\"delete\">\n            <Modal.Header closeButton>\n                <Modal.Title>Delete confirmation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                You are about to delete the note {note.title}\n            </Modal.Body>\n            <Modal.Footer>\n                <Styledp>\n                    <SpanLeft><ButtonStyled onClick={handleClose}>Close</ButtonStyled></SpanLeft>\n                    <SpanRight><ButtonStyled onClick={()=>deleteNote(note.id)}>Yes, I am sure!</ButtonStyled></SpanRight>\n                </Styledp>\n            </Modal.Footer>\n        </Modal>\n        </>\n}\nfunction ConfirmationMessageEdit(props){\n    const{show, handleClose, note} = props;\n    return <>\n        <Modal show={show} onHide={handleClose} id=\"edit\">\n            <Modal.Header closeButton>\n                <Modal.Title>Edit confirmation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                You are about to edit the note {note.title}.\n            </Modal.Body>\n            <Modal.Footer id=\"footerModal\">\n                <Styledp>\n                    <SpanLeft><ButtonStyled onClick={handleClose}>Close</ButtonStyled></SpanLeft>\n                    <SpanRight id=\"spanRight\" ><StyledLink to=\"/editor\">Yes, I am sure!</StyledLink></SpanRight>\n                </Styledp>\n            </Modal.Footer>\n        </Modal>\n    </>\n}\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {Link} from \"react-router-dom\"\nimport {NoteI} from \"./note\";\nimport {useNoteContext} from \"../contexts/notecontext\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport {BsFileEarmarkPlus} from \"react-icons/bs\";\n\n\nconst H1Notes = styled.h1`\n    display: block;\n    margin-top: 5em;\n`;\n\nconst CreatorLink = styled(Link)`\n    &:hover{\n    color:white;\n    text-decoration: none;\n    }\n`;\nconst BigIconNew = styled(BsFileEarmarkPlus)`\n  font-size: 3em;\n  color: ${({theme}) => theme.colors.secondaryDark};\n`;\n\nexport function NotesDisplay() {\n    const {notes} = useNoteContext();\n    console.log(notes);\n    return <>\n        <H1Notes>NOTES: </H1Notes>\n        <p>{!notes.length ? \"No notes to display. Why don't you make a note?\" : null}<CreatorLink to=\"/creator\">\n            <BigIconNew/></CreatorLink></p>\n        <NotesCards/>\n    </>\n}\n\nfunction NotesCards() {\n    const {notes} = useNoteContext();\n    return <>\n        <CardDeck>\n            {notes.map((n) => (<NoteI key={n.id} note={n}/>))}\n        </CardDeck>\n    </>\n}\n\n","import React, {useState} from \"react\";\nimport styled from \"@emotion/styled\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from \"react-router-dom\";\nimport {useActiveNoteContext} from \"../contexts/active_notecontext\";\nimport {useNoteContext} from \"../contexts/notecontext\";\nimport {NotesFormCategories, NotesFormDate, NotesFormStatus, NotesFormText, NotesFormTitle} from \"./notesForm\";\n\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n`;\nconst ButtonStyled = styled(Button)`\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   color: white;\n   &:hover{\n    background-color:${({theme}) =>theme.colors.favoriteRed};\n    text-decoration: none;\n    color: white;\n    }\n    &:focus{\n    background-color:${({theme}) =>theme.colors.secondaryDark};\n    text-decoration: none;\n    color: white;\n    }\n`;\nexport function EditForm(){\n    const{activeNote}=useActiveNoteContext();\n    const {addNote} = useNoteContext();\n    const[note, setNote]= useState(activeNote);\n    let history = useHistory();\n    function handleSubmit(e){\n        e.preventDefault();\n        addNote({...note});\n        history.push(\"/\");\n    }\nreturn <>\n    <StyledH1>NOTE EDITOR</StyledH1>\n    <Form onSubmit={handleSubmit}>\n        <NotesFormTitle setNote={setNote} note={note}/>\n        <NotesFormText setNote={setNote} note={note}/>\n        <NotesFormCategories setNote={setNote} note={note}/>\n        <NotesFormStatus setNote={setNote} note={note}/>\n        <NotesFormDate setNote={setNote} note={note}/>\n        <ButtonStyled id=\"submit\" variant=\"primary\" type=\"submit\">\n            Submit\n        </ButtonStyled>\n    </Form>\n\n</>\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/user_context\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport styled from \"@emotion/styled\";\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n\n`;\nconst StyledButton = styled(Button)`\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   color: white;\n   &:hover{\n    background-color:${({theme}) =>theme.colors.favoriteRed};\n    text-decoration: none;\n    color: white;\n    }\n`;\nconst StyledLink=styled(Link)`\n   color: ${({theme}) =>theme.colors.favoriteRed};\n   text-decoration: none;\n   &:hover{\n    color:${({theme}) =>theme.colors.secondaryDark};\n    text-decoration: none;\n    }\n`;\nexport default function UserLogin() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        try {\n            setError(\"\");\n            setLoading(true);\n            await login(emailRef.current.value, passwordRef.current.value);\n            history.push(\"/\");\n        } catch {\n            setError(\"Failed to log in\")\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <StyledH1></StyledH1>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Log In</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n                        <StyledButton disabled={loading} className=\"w-100\" type=\"submit\">\n                            Log In\n                        </StyledButton>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Need an account? <StyledLink to=\"/signup\">Sign Up</StyledLink>\n            </div>\n        </>\n    )\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/user_context\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport styled from \"@emotion/styled\";\n\nconst StyledH1 = styled.h1`\n  margin-top: 5em;\n\n`;\nconst StyledButton = styled(Button)`\n   background-color: ${({theme}) =>theme.colors.secondaryDark};\n   color: white;\n   &:hover{\n    background-color:${({theme}) =>theme.colors.favoriteRed};\n    text-decoration: none;\n    color: white;\n    }\n`;\nconst StyledLink=styled(Link)`\n   color: ${({theme}) =>theme.colors.favoriteRed};\n   text-decoration: none;\n   &:hover{\n    color:${({theme}) =>theme.colors.secondaryDark};\n    text-decoration: none;\n    }\n`;\nexport default function Registration() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError(\"Passwords do not match\")\n        }\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n            history.push(\"/\")\n        } catch {\n            setError(\"Failed to create an account\")\n        }\n\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <StyledH1></StyledH1>\n            <Card>\n                <Card.Body>\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\n                    <Form onSubmit={handleSubmit}>\n                        <Form.Group id=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" ref={emailRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordRef} required />\n                        </Form.Group>\n                        <Form.Group id=\"password-confirm\">\n                            <Form.Label>Password Confirmation</Form.Label>\n                            <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                        </Form.Group>\n                        <StyledButton disabled={loading} className=\"w-100\" type=\"submit\">\n                            Sign Up\n                        </StyledButton>\n                    </Form>\n                </Card.Body>\n            </Card>\n            <div className=\"w-100 text-center mt-2\">\n                Already have an account? <StyledLink to=\"/login\">Log In</StyledLink>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport \"firebase/firestore\";\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\"\nimport Container from \"react-bootstrap/Container\";\nimport {ThemeProvider} from \"emotion-theming\";\nimport {theme} from \"./utilities/theme\";\nimport './App.css';\nimport {Navigation} from \"./components/navigation\";\nimport {NotesForm} from \"./components/notesForm\";\nimport {NotesDisplay} from \"./components/notes_list\";\nimport {ActiveNoteContextProvider} from \"./contexts/active_notecontext\";\nimport {NoteContextProvider} from \"./contexts/notecontext\";\nimport {EditForm} from \"./components/edit_notes_form\";\nimport {AuthProvider} from \"./contexts/user_context\";\nimport UserLogin from \"./components/user_login\";\nimport Registration from \"./components/user_registration\";\nimport { useAuth } from \"./contexts/user_context\"\n\n\nfunction App() {\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <AuthProvider>\n                        <ActiveNoteContextProvider>\n                            <NoteContextProvider>\n                                <ProvidedApp/>\n                            </NoteContextProvider>\n                        </ActiveNoteContextProvider>\n                </AuthProvider>\n            </ThemeProvider>\n        </>\n    );\n}\n\nfunction ProvidedApp() {\n    const { currentUser } = useAuth()\n    return (<>\n            <HashRouter basename={\"/\"}>\n                <Container>\n                    <Navigation/>\n                    <Switch>\n                        <Route exact path={\"/\"}>\n                            {currentUser !== null ?\n                                <NotesDisplay/> : <Redirect to={\"/login\"}/>\n                            }\n                        </Route>\n                        <Route exact path={\"/creator\"}>\n                            {currentUser !== null ?\n                                <NotesForm/> : <Redirect to={\"/login\"}/>}\n                        </Route>\n\n                        <Route exact path={\"/editor\"}>\n                            {currentUser !== null ?\n                                <EditForm/> : <Redirect to={\"/login\"}/>}\n                        </Route>\n                        <Route exact path=\"/login\" component={UserLogin}/>\n                        <Route exact path=\"/signup\" component={Registration}/>\n                    </Switch>\n                </Container>\n            </HashRouter>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/fireLogo.3a51098a.png\";"],"sourceRoot":""}